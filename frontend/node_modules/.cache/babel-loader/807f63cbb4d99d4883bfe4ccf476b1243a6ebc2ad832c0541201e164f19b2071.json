{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patri\\\\OneDrive\\\\Documents\\\\web-rpg\\\\frontend\\\\src\\\\Pages\\\\CreatePage\\\\CreatePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/*\nCharacter creation - saved to JSON (MongoDB)\n\nName\nRace - Elf, Human, Half-Elf, Dwarf, Halfling, \nRace - Bad guys : Orc, Goblin, Drow, Tiefling\nClass - Barbarian, Bard, Cleric, Druid, Fighter, Monk, Paladin, Ranger, Rouge, Sorcerer, Warlock, Wizard\nStats \n    - Strength\n    - Dexterity\n    - Constitution\n    - Intelligence\n    - Wisdom\n    - Charisma\nStarting items\nArmor Class - based of dexterity and armor\nHit Points - based off constitution\nBackground - Have the players write themselves a background that will help generate the world they play in\n*/\n\n//funciton to handle the creation of the character\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePage() {\n  _s();\n  const [characterInfo, setCharacterInfo] = useState({\n    name: '',\n    race: '',\n    class: '',\n    stats: {\n      strength: 0,\n      dexterity: 0,\n      constitution: 0,\n      intelligence: 0,\n      wisdom: 0,\n      charisma: 0\n    },\n    modifiers: {\n      strength: 0,\n      dexterity: 0,\n      constitution: 0,\n      intelligence: 0,\n      wisdom: 0,\n      charisma: 0\n    },\n    startingItems: '',\n    background: ''\n  });\n\n  //function to handle changing values - not stats\n  const handleInputChange = (key, value) => {\n    setCharacterInfo(prevInfo => ({\n      ...prevInfo,\n      [key]: value\n    }));\n  };\n  const calculateArmorClass = () => {\n    return 10 + Math.floor(characterInfo.stats.dexterity / 2);\n  };\n  const calculateStatModifier = () => {\n    const statModifiers = {};\n    const statNames = ['strength', 'dexterity', 'constitution', 'intelligence', 'wisdon', 'charisma'];\n    statNames.forEach(stat => {\n      const statValue = characterInfo.stats[stat];\n      const modifier = Math.floor((statValue - 10) / 2);\n      statModifiers[stat] = modifier;\n    });\n    return statModifiers;\n  };\n  const handleStatChange = (stat, value) => {\n    setCharacterInfo(prevCharacterInfo => ({\n      ...prevCharacterInfo,\n      stats: {\n        ...prevCharacterInfo.stats,\n        [stat]: value\n      }\n    }));\n    const statModifiers = calculateStatModifier();\n    setCharacterInfo(prevCharacterInfo => ({\n      ...prevCharacterInfo,\n      modifiers: {\n        ...prevCharacterInfo.modifiers,\n        ...statModifiers\n      }\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('Character Info:', characterInfo);\n    //add logic to save characterInfo to MongoDB\n  };\n  const calculateHitPoints = () => {\n    //later check per class if class is x then use base hp y + const\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-creator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create your Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: characterInfo.name,\n          onChange: e => handleInputChange('name', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Race: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"race\",\n          value: characterInfo.race,\n          onChange: e => handleInputChange('race', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Class: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"race\",\n          value: characterInfo.race,\n          onChange: e => handleInputChange('race', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Race: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"race\",\n          value: characterInfo.race,\n          onChange: e => handleInputChange('race', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Race: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"race\",\n          value: characterInfo.race,\n          onChange: e => handleInputChange('race', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePage, \"wHl4I3hhTRgsBdiE7wSy7De/l90=\");\n_c = CreatePage;\n;\nexport default CreatePage;\nvar _c;\n$RefreshReg$(_c, \"CreatePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreatePage","_s","characterInfo","setCharacterInfo","name","race","class","stats","strength","dexterity","constitution","intelligence","wisdom","charisma","modifiers","startingItems","background","handleInputChange","key","value","prevInfo","calculateArmorClass","Math","floor","calculateStatModifier","statModifiers","statNames","forEach","stat","statValue","modifier","handleStatChange","prevCharacterInfo","handleSubmit","e","preventDefault","console","log","calculateHitPoints","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/patri/OneDrive/Documents/web-rpg/frontend/src/Pages/CreatePage/CreatePage.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\n/*\nCharacter creation - saved to JSON (MongoDB)\n\nName\nRace - Elf, Human, Half-Elf, Dwarf, Halfling, \nRace - Bad guys : Orc, Goblin, Drow, Tiefling\nClass - Barbarian, Bard, Cleric, Druid, Fighter, Monk, Paladin, Ranger, Rouge, Sorcerer, Warlock, Wizard\nStats \n    - Strength\n    - Dexterity\n    - Constitution\n    - Intelligence\n    - Wisdom\n    - Charisma\nStarting items\nArmor Class - based of dexterity and armor\nHit Points - based off constitution\nBackground - Have the players write themselves a background that will help generate the world they play in\n*/\n\n//funciton to handle the creation of the character\nfunction CreatePage() {\n    const [characterInfo, setCharacterInfo] = useState( {\n        name: '',\n        race: '',\n        class: '',\n        stats: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0,\n        },\n        modifiers: {\n            strength: 0,\n            dexterity: 0,\n            constitution: 0,\n            intelligence: 0,\n            wisdom: 0,\n            charisma: 0,\n        },\n        startingItems: '',\n        background: '',\n    });\n\n    //function to handle changing values - not stats\n    const handleInputChange = (key, value) => {\n        setCharacterInfo((prevInfo) => ({\n            ...prevInfo,\n            [key]: value,\n        }));\n    };\n\n\n    const calculateArmorClass = () => {\n        return 10 + Math.floor(characterInfo.stats.dexterity/2);\n    };\n\n    const calculateStatModifier = () => {\n        const statModifiers = {};\n\n        const statNames = ['strength', 'dexterity', 'constitution', 'intelligence', 'wisdon', 'charisma'];\n\n        statNames.forEach((stat) => {\n            const statValue = characterInfo.stats[stat];\n            const modifier = Math.floor((statValue-10)/2);\n            statModifiers[stat] = modifier;\n        });\n        return statModifiers;\n    };\n\n    const handleStatChange = (stat, value) => {\n        setCharacterInfo((prevCharacterInfo) => ({\n            ...prevCharacterInfo,\n            stats: {\n                ...prevCharacterInfo.stats,\n                [stat]: value,\n            },\n        }));\n\n        const statModifiers = calculateStatModifier();\n        setCharacterInfo((prevCharacterInfo) => ({\n            ...prevCharacterInfo,\n            modifiers: {\n                ...prevCharacterInfo.modifiers,\n                ...statModifiers,\n            },\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('Character Info:', characterInfo);\n        //add logic to save characterInfo to MongoDB\n    };\n\n    const calculateHitPoints = () => {\n        //later check per class if class is x then use base hp y + const\n    };\n\n    return (\n        <div className=\"character-creator\">\n            <h1>Create your Character</h1>\n            <form onSubmit={handleSubmit}>\n                <label>Name: <input type=\"text\" name='name' value={characterInfo.name} onChange={(e) => handleInputChange('name', e.target.value)} /></label>\n                <br />\n                <label>Race: <input type=\"text\" name='race' value={characterInfo.race} onChange={(e) => handleInputChange('race', e.target.value)} /></label>\n                <br />\n                <label>Class: <input type=\"text\" name='race' value={characterInfo.race} onChange={(e) => handleInputChange('race', e.target.value)} /></label>\n                <br />\n                <label>Race: <input type=\"text\" name='race' value={characterInfo.race} onChange={(e) => handleInputChange('race', e.target.value)} /></label>\n                <br />\n                <label>Race: <input type=\"text\" name='race' value={characterInfo.race} onChange={(e) => handleInputChange('race', e.target.value)} /></label>\n                <br />\n            </form>\n        </div>\n        \n    );\n};\n\nexport default CreatePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}